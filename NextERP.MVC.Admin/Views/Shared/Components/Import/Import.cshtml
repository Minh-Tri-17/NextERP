@using NextERP.Util
@model string
@inject LazZiya.ExpressLocalization.ISharedCultureLocalizer Localizer

<div class="modal fade" id="import-modal" aria-hidden="true" tabindex="-1">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<form class="needs-validation" novalidate>
				<div class="modal-header">
					<h1 class="modal-title fs-5" id="exampleModalLabel" localize-content>ImportData</h1>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="mb-2">
						<label for="fileImport" class="col-form-label col-md-6" localize-content>UploadFile</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" id="fileImport" type="file" name="file" />
						</div>
					</div>
					<div class="progress" style="display: none;">
						<div class="progress-bar progress-bar-striped progress-bar-animated bg-primary"
							 role="progressbar"
							 style="width: 0%"
							 aria-valuenow="0"
							 aria-valuemin="0"
							 aria-valuemax="100">
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
						<i class="fa-solid fa-xmark"></i> <span localize-content>Close</span>
					</button>
					<button type="button" class="button btn" id="start-import-button">
						@{
							var startImportIcon = @"<svg class=""icon"" fill=""none"" stroke=""currentColor"" viewBox=""0 0 24 24"" xmlns=""http://www.w3.org/2000/svg"" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2.5""><path d=""M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4""></path><polyline points=""7 10 12 15 17 10""></polyline><line x1=""12"" y1=""15"" x2=""12"" y2=""3""></line></svg>";
						}

						@await Component.InvokeAsync(Constants.Button, new { nameButton = "StartImport", iconHtml = startImportIcon })
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

<script>
	$("#start-import-button").click(function () {
		const $form = $(this).closest("form");
		const $formData = new FormData($form.get(0));

		const MIN_LOADING_TIME = 3000;
		let progressValue = 0;

		$(".progress").show();
		$(".progress-bar").css("width", "0%").attr("aria-valuenow", 0).text("0%");

		setTimeout(() => {
			const startTime = Date.now();
			const fakeProgress = setInterval(() => {
				if (progressValue < 90) {
					progressValue += 5;
					$(".progress-bar").css("width", progressValue + "%").attr("aria-valuenow", progressValue).text(progressValue + "%");
				}
			}, 200);

			callApi("@Url.Action("Import", Model)", "POST", $formData)
				.then(data => {
					const elapsed = Date.now() - startTime;
					const remaining = Math.max(MIN_LOADING_TIME - elapsed, 0);

					setTimeout(() => {
						clearInterval(fakeProgress);
						$(".progress-bar").css("width", "100%").attr("aria-valuenow", 100).text("100%");

						setTimeout(() => {
							$("#import-modal").modal("hide");
						}, 500)
					}, remaining);
				})
				.catch(err => {
					showMessage("@Localizer[Messages.ErrorCallAPI]");
				});
		}, 500);
	});

	$("#import-button").click(function () {
		$(".progress").hide();
		$(".progress-bar").css("width", "0%").attr("aria-valuenow", 0);
	});
</script>