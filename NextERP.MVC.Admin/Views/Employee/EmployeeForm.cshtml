@using NextERP.ModelBase
@using NextERP.Util
@model NextERP.ModelBase.EmployeeModel
@inject LazZiya.ExpressLocalization.ISharedCultureLocalizer Localizer

<div class="modal fade" id="create-edit-modal" aria-hidden="true" tabindex="-1">
	<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
		<div class="modal-content">
			<form class="needs-validation" id="@TableName.Employee" novalidate>
				<div class="modal-header">
					<h1 class="modal-title fs-5" id="exampleModalLabel" localize-content>CreateOrEdit</h1>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<input id="@EmployeeModel.AttributeNames.EmployeeId" type="hidden" asp-for="Id" />

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.EmployeeCode" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.EmployeeCode</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="text" asp-for="EmployeeCode" disabled />
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.Dob" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.Dob</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="date" asp-for="Dob" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.Dob" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.HireDate" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.HireDate</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="date" asp-for="HireDate" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.HireDate" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.FullName" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.FullName</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="text" asp-for="FullName" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.FullName" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.PhoneNumber" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.PhoneNumber</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="text" asp-for="PhoneNumber" min="10" max="10" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.PhoneNumber" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.Gender" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.Gender</label>
						<div class="col-md-12">
							<select class="form-select form-select-sm" asp-for="Gender">
								<option value=""></option>
								@foreach (var item in Enum.GetValues(typeof(Enums.Gender)))
								{
									<option value="@item" localize-content>@item</option>
								}
							</select>
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.Gender" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.Address" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.Address</label>
						<div class="col-md-12">
							<textarea class="form-control form-control-sm" rows="3" asp-for="Address"></textarea>
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.Address" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.NationalId" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.NationalId</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="text" asp-for="NationalId" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.NationalId" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.Email" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.Email</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="email" asp-for="Email" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.Email" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.EducationLevel" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.EducationLevel</label>
						<div class="col-md-12">
							<select class="form-select form-select-sm" asp-for="EducationLevel">
								<option value=""></option>
								@foreach (var item in Enum.GetValues(typeof(Enums.EducationLevel)))
								{
									<option value="@item" localize-content>@item</option>
								}
							</select>
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.EducationLevel" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.BankAccountNumber" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.BankAccountNumber</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="text" asp-for="BankAccountNumber" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.BankAccountNumber" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.HealthInsuranceNumber" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.HealthInsuranceNumber</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="text" asp-for="HealthInsuranceNumber" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.HealthInsuranceNumber" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.SocialInsuranceNumber" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.SocialInsuranceNumber</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="text" asp-for="SocialInsuranceNumber" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.SocialInsuranceNumber" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.TaxCode" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.TaxCode</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="text" asp-for="TaxCode" />
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.TaxCode" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.OperatingStatus" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.OperatingStatus</label>
						<div class="col-md-12">
							<select class="form-select form-select-sm" asp-for="OperatingStatus">
								<option value=""></option>
								@foreach (var item in Enum.GetValues(typeof(Enums.OperatingStatus)))
								{
									<option value="@item" localize-content>@item</option>
								}
							</select>
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.OperatingStatus" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@EmployeeModel.AttributeNames.Note" class="col-form-label col-md-6" localize-content>@EmployeeModel.AttributeNames.Note</label>
						<div class="col-md-12">
							<textarea class="form-control form-control-sm" rows="3" asp-for="Note"></textarea>
							<div class="invalid-feedback" id="invalid-@EmployeeModel.AttributeNames.Note" localize-content></div>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
						<i class="fa-solid fa-xmark"></i> <span localize-content>Close</span>
					</button>
					<button type="button" class="button-outline btn save-button" id="only-save-button">
						@{
							var saveIcon = @"<svg class=""icon"" fill=""none"" stroke=""currentColor"" viewBox=""0 0 24 24"" xmlns=""http://www.w3.org/2000/svg"" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2.5""><path d=""M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z""></path><polyline points=""17 21 17 13 7 13 7 21""></polyline><polyline points=""7 3 7 8 15 8""></polyline></svg>";
						}

						@await Component.InvokeAsync(Constants.Button, new { nameButton = Constants.Save, iconHtml = saveIcon })
					</button>
					<button type="button" class="button btn save-button" data-bs-dismiss="modal">
						@{
							var saveAndCloseIcon = @"<svg class=""icon"" fill=""none"" stroke=""currentColor"" viewBox=""0 0 24 24"" xmlns=""http://www.w3.org/2000/svg"" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2.5""><path d=""M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z""></path><polyline points=""17 21 17 13 7 13 7 21""></polyline><polyline points=""7 3 7 8 15 8""></polyline></svg>";
						}

						@await Component.InvokeAsync(Constants.Button, new { nameButton = Constants.SaveAndClose, iconHtml = saveAndCloseIcon })
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

<script>
	$(".save-button").click(function () {
		const $form = $(this).closest("form");
		const formData = new FormData($form[0]);
		const formElement = $form[0];
		let id = formData.get("@Constants.Id");

		// Nếu không có ID (tạo mới), set Guid.Empty
		if (!id || id === "") {
			formData.set("@Constants.Id", "@Guid.Empty");
		}

		callApi("@Url.Action(Constants.CreateOrEdit, TableName.Employee)", "POST", formData)
			.then(data => {
				loadEmployees();

				if (data && Array.isArray(data)) {
					showInvalid(data, formElement);
				}
			})
			.catch(err => {
				showMessage("@Localizer[Messages.ErrorCallAPI]");
			});
	});
</script>
