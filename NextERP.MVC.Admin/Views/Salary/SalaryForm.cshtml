@using NextERP.ModelBase
@using NextERP.Util
@model NextERP.ModelBase.SalaryModel
@inject LazZiya.ExpressLocalization.ISharedCultureLocalizer Localizer

<div class="modal fade" id="create-edit-modal" aria-hidden="true" tabindex="-1">
	<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
		<div class="modal-content">
			<form class="needs-validation" id="@TableName.Salary" novalidate>
				<div class="modal-header">
					<h1 class="modal-title fs-5" id="exampleModalLabel" localize-content>CreateOrEdit</h1>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<input id="@SalaryModel.AttributeNames.SalaryId" type="hidden" asp-for="Id" />

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.SalaryCode" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.SalaryCode</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="text" asp-for="SalaryCode" disabled />
						</div>
					</div>

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.SalaryMonth" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.SalaryMonth</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="month" asp-for="SalaryMonth" />
							<div class="invalid-feedback" id="invalid-@SalaryModel.AttributeNames.SalaryMonth" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.GrossSalary" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.GrossSalary</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="number" asp-for="GrossSalary" />
							<div class="invalid-feedback" id="invalid-@SalaryModel.AttributeNames.GrossSalary" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.Bonus" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.Bonus</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="number" asp-for="Bonus" />
							<div class="invalid-feedback" id="invalid-@SalaryModel.AttributeNames.Bonus" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.TaxAmount" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.TaxAmount</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="number" asp-for="TaxAmount" />
							<div class="invalid-feedback" id="invalid-@SalaryModel.AttributeNames.TaxAmount" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.InsuranceContribution" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.InsuranceContribution</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="number" asp-for="InsuranceContribution" />
							<div class="invalid-feedback" id="invalid-@SalaryModel.AttributeNames.InsuranceContribution" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.AdvanceSalary" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.AdvanceSalary</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="number" asp-for="AdvanceSalary" />
							<div class="invalid-feedback" id="invalid-@SalaryModel.AttributeNames.AdvanceSalary" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.Deductions" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.Deductions</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="number" asp-for="Deductions" />
							<div class="invalid-feedback" id="invalid-@SalaryModel.AttributeNames.Deductions" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.NetSalary" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.NetSalary</label>
						<div class="col-md-12">
							<input class="form-control form-control-sm" type="number" asp-for="NetSalary" />
							<div class="invalid-feedback" id="invalid-@SalaryModel.AttributeNames.NetSalary" localize-content></div>
						</div>
					</div>

					<div class="mb-2">
						<label for="@SalaryModel.AttributeNames.Note" class="col-form-label col-md-6" localize-content>@SalaryModel.AttributeNames.Note</label>
						<div class="col-md-12">
							<textarea class="form-control form-control-sm" rows="3" asp-for="Note"></textarea>
							<div class="invalid-feedback" id="invalid-@SalaryModel.AttributeNames.Note" localize-content></div>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
						<i class="fa-solid fa-xmark"></i> <span localize-content>Close</span>
					</button>
					<button type="button" class="button-outline btn save-button" id="only-save-button">
						@{
							var saveIcon = @"<svg class=""icon"" fill=""none"" stroke=""currentColor"" viewBox=""0 0 24 24"" xmlns=""http://www.w3.org/2000/svg"" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2.5""><path d=""M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z""></path><polyline points=""17 21 17 13 7 13 7 21""></polyline><polyline points=""7 3 7 8 15 8""></polyline></svg>";
						}

						@await Component.InvokeAsync(Constants.Button, new { nameButton = Constants.Save, iconHtml = saveIcon })
					</button>
					<button type="button" class="button btn save-button" data-bs-dismiss="modal">
						@{
							var saveAndCloseIcon = @"<svg class=""icon"" fill=""none"" stroke=""currentColor"" viewBox=""0 0 24 24"" xmlns=""http://www.w3.org/2000/svg"" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2.5""><path d=""M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z""></path><polyline points=""17 21 17 13 7 13 7 21""></polyline><polyline points=""7 3 7 8 15 8""></polyline></svg>";
						}

						@await Component.InvokeAsync(Constants.Button, new { nameButton = Constants.SaveAndClose, iconHtml = saveAndCloseIcon })
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

<script>
	$(function () {
		// Kích hoạt strict mode cho toàn bộ code bên trong hàm này
		'use strict';

		$(".save-button").click(function () {
			const $searchForm = $("#@TableName.Salary-search-form");
			const $saveForm = $(this).closest("form");
			const $formElement = $saveForm.get(0);
			const $formData = new FormData($formElement);
			let id = $formData.get("@Constants.Id");

			// Nếu không có ID (tạo mới), set Guid.Empty
			if (!id || id.trim() === "") {
				$formData.set("@Constants.Id", "@Guid.Empty");
			}

			callApi("@Url.Action(Constants.CreateOrEdit, TableName.Salary)", "POST", $formData)
				.then(data => {
					loadSalarys($searchForm);

					if (data && Array.isArray(data)) {
						showInvalid(data, $formElement);
					}
				})
				.catch(err => {
					showMessage("@Localizer[Messages.ErrorCallAPI]");
				});
		});
	});
</script>
